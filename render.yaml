# Render.com deployment configuration - Updated with email filtering improvements
services:
  # Main web service
  - type: web
    name: faq-generator-web
    env: node
    plan: starter
    buildCommand: npm install && npm run build
    startCommand: npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: faq-generator-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: faq-generator-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true
      - key: BASE_URL
        value: https://faq-generator-web.onrender.com
      - key: CORS_ORIGIN
        value: https://faq-generator-web.onrender.com
      - key: GMAIL_CLIENT_ID
        sync: false
      - key: GMAIL_CLIENT_SECRET
        sync: false
      - key: GMAIL_REDIRECT_URI
        value: https://faq-generator-web.onrender.com/api/auth/gmail/callback
      - key: OUTLOOK_CLIENT_ID
        sync: false
      - key: OUTLOOK_CLIENT_SECRET
        sync: false
      - key: OUTLOOK_REDIRECT_URI
        value: https://faq-generator-web.onrender.com/api/auth/outlook/callback
      - key: OUTLOOK_TENANT_ID
        value: common
      - key: OPENAI_API_KEY
        sync: false
      - key: OPENAI_MODEL
        value: text-embedding-3-small
      - key: MAX_EMAILS_PER_SYNC
        value: 1000
      - key: SIMILARITY_THRESHOLD
        value: 0.8
      - key: MIN_QUESTION_LENGTH
        value: 10
      - key: MAX_QUESTION_LENGTH
        value: 500
      - key: RATE_LIMIT_WINDOW_MS
        value: 900000
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 100
      - key: LOG_LEVEL
        value: info
      - key: REDIS_QUEUE_NAME
        value: email-processing
      - key: JOB_CONCURRENCY
        value: 5

  # Background worker service
  - type: worker
    name: faq-generator-worker
    env: node
    plan: starter
    buildCommand: npm install
    startCommand: node src/workers/emailProcessor.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: faq-generator-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: faq-generator-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: OPENAI_MODEL
        value: text-embedding-3-small
      - key: MAX_EMAILS_PER_SYNC
        value: 1000
      - key: SIMILARITY_THRESHOLD
        value: 0.8
      - key: MIN_QUESTION_LENGTH
        value: 10
      - key: MAX_QUESTION_LENGTH
        value: 500
      - key: LOG_LEVEL
        value: info
      - key: REDIS_QUEUE_NAME
        value: email-processing
      - key: JOB_CONCURRENCY
        value: 5

  # Cron job service for scheduled email syncing
  - type: cron
    name: email-sync-cron
    env: node
    plan: starter
    buildCommand: npm install
    schedule: "*/30 * * * *" # Every 30 minutes
    startCommand: node scripts/cron-email-sync.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: CRON_SYNC_MAX_EMAILS
        value: "500"
      - key: CRON_TIMEOUT_MS
        value: "600000"
      - key: DATABASE_URL
        fromDatabase:
          name: faq-generator-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: faq-generator-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: GMAIL_CLIENT_ID
        sync: false
      - key: GMAIL_CLIENT_SECRET
        sync: false
      - key: OUTLOOK_CLIENT_ID
        sync: false
      - key: OUTLOOK_CLIENT_SECRET
        sync: false
      - key: OUTLOOK_TENANT_ID
        value: common
      - key: LOG_LEVEL
        value: info

  # Cron job service for FAQ generation
  - type: cron
    name: faq-generation-cron
    env: node
    plan: starter
    buildCommand: npm install
    schedule: "0 */2 * * *" # Every 2 hours
    startCommand: node scripts/cron-faq-generation.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: CRON_MIN_QUESTION_COUNT
        value: "3"
      - key: CRON_MAX_FAQS_PER_RUN
        value: "50"
      - key: CRON_ONLY_NEW_QUESTIONS
        value: "true"
      - key: CRON_TIMEOUT_MS
        value: "900000"
      - key: DATABASE_URL
        fromDatabase:
          name: faq-generator-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: faq-generator-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: LOG_LEVEL
        value: info

  # Cron job service for system cleanup
  - type: cron
    name: cleanup-cron
    env: node
    plan: starter
    buildCommand: npm install
    schedule: "0 2 * * *" # Daily at 2 AM
    startCommand: node scripts/cron-cleanup.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: CLEANUP_RETENTION_DAYS
        value: "30"
      - key: METRICS_RETENTION_DAYS
        value: "90"
      - key: ENABLE_VACUUM
        value: "true"
      - key: CRON_TIMEOUT_MS
        value: "600000"
      - key: DATABASE_URL
        fromDatabase:
          name: faq-generator-db
          property: connectionString
      - key: LOG_LEVEL
        value: info

  # Redis service for caching and job queues
  - type: redis
    name: faq-generator-redis
    ipAllowList: []
    plan: starter
    maxmemoryPolicy: allkeys-lru

databases:
  - name: faq-generator-db
    databaseName: faq_generator
    user: faq_user
    plan: free
    postgresMajorVersion: 15